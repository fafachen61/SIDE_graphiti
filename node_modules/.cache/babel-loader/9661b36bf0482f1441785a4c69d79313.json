{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport Routes from \"../routes/Index\";\nimport axios from 'axios';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.loginStatus = function () {\n      axios.get('http://localhost:3001/logged_in', {\n        withCredentials: true\n      }).then(function (response) {\n        if (response.data.logged_in) {\n          _this.handleLogin(response);\n        } else {\n          _this.handleLogout();\n        }\n      })[\"catch\"](function (error) {\n        return console.log('api errors:', error);\n      });\n    };\n\n    _this.handleLogin = function (data) {\n      _this.setState({\n        isLoggedIn: true,\n        user: data.user\n      });\n    };\n\n    _this.handleLogout = function () {\n      _this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    _this.state = {\n      isLoggedIn: false,\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loginStatus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, Routes);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //export default props => <>{Routes}</>;","map":{"version":3,"sources":["/Users/chenfayu/Desktop/graffiti/app/javascript/components/App.jsx"],"names":["React","Component","Routes","axios","App","props","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","error","console","log","setState","isLoggedIn","user","state"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAUnBC,WAVmB,GAUL,YAAM;AAChBH,MAAAA,KAAK,CAACI,GAAN,CAAU,iCAAV,EAA6C;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAA7C,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcC,SAAlB,EAA6B;AACzB,gBAAKC,WAAL,CAAiBH,QAAjB;AACH,SAFD,MAEO;AACH,gBAAKI,YAAL;AACH;AACJ,OAPD,WAQO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAAJ;AAAA,OARZ;AASC,KApBc;;AAAA,UAqBnBF,WArBmB,GAqBL,UAACF,IAAD,EAAU;AACpB,YAAKO,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAE,IADF;AAEVC,QAAAA,IAAI,EAAET,IAAI,CAACS;AAFD,OAAd;AAIH,KA1BkB;;AAAA,UA2BnBN,YA3BmB,GA2BJ,YAAM;AACjB,YAAKI,QAAL,CAAc;AACdC,QAAAA,UAAU,EAAE,KADE;AAEdC,QAAAA,IAAI,EAAE;AAFQ,OAAd;AAIH,KAhCkB;;AAEf,UAAKC,KAAL,GAAa;AACTF,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAFe;AAMlB;;;;WACD,6BAAoB;AAChB,WAAKd,WAAL;AACH;;;WAyBD,kBAAS;AACP,0BACE,0CAAGJ,MAAH,CADF;AAGD;;;;EAvCaD,S;;AAyClB,eAAeG,GAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport Routes from \"../routes/Index\";\nimport axios from 'axios'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoggedIn: false,\n            user: {}\n        };\n    }\n    componentDidMount() {\n        this.loginStatus()\n    }\n    loginStatus = () => {\n        axios.get('http://localhost:3001/logged_in', {withCredentials: true})    \n        .then(response => {\n            if (response.data.logged_in) {\n                this.handleLogin(response)\n            } else {\n                this.handleLogout()\n            }\n        })\n        .catch(error => console.log('api errors:', error))\n        }\n    handleLogin = (data) => {\n        this.setState({\n            isLoggedIn: true,\n            user: data.user\n        })\n    }\n    handleLogout = () => {\n        this.setState({\n        isLoggedIn: false,\n        user: {}\n        })\n    }\n    \n    render() {\n      return (\n        <>{Routes}</>\n      );\n    }\n  }\nexport default App;\n\n//export default props => <>{Routes}</>;"]},"metadata":{},"sourceType":"module"}